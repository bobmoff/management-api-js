// This file is auto-generated by @hey-api/openapi-ts

export const $success_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
  },
} as const;

export const $error = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Error code.",
    },
    message: {
      type: "string",
      description: "Error message.",
    },
  },
} as const;

export const $error_response = {
  type: "object",
  properties: {
    errors: {
      type: "array",
      items: {
        $ref: "#/components/schemas/error",
      },
    },
  },
} as const;

export const $user = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "Unique id of the user in Kinde.",
    },
    provided_id: {
      type: "string",
      description: "External id for user.",
    },
    preferred_email: {
      type: "string",
      description: "Default email address of the user in Kinde.",
    },
    username: {
      type: "string",
      description: "Primary username of the user in Kinde.",
    },
    last_name: {
      type: "string",
      description: "User's last name.",
    },
    first_name: {
      type: "string",
      description: "User's first name.",
    },
    is_suspended: {
      type: "boolean",
      description: "Whether the user is currently suspended or not.",
    },
    picture: {
      type: "string",
      description: "User's profile picture URL.",
    },
    total_sign_ins: {
      type: "integer",
      description: "Total number of user sign ins.",
      nullable: true,
    },
    failed_sign_ins: {
      type: "integer",
      description: "Number of consecutive failed user sign ins.",
      nullable: true,
    },
    last_signed_in: {
      type: "string",
      description: "Last sign in date in ISO 8601 format.",
      nullable: true,
    },
    created_on: {
      type: "string",
      description: "Date of user creation in ISO 8601 format.",
      nullable: true,
    },
    organizations: {
      type: "array",
      description: "Array of organizations a user belongs to.",
      items: {
        type: "string",
      },
    },
    identities: {
      type: "array",
      description: "Array of identities belonging to the user.",
      items: {
        type: "object",
        properties: {
          type: {
            type: "string",
          },
          identity: {
            type: "string",
          },
        },
      },
    },
  },
} as const;

export const $update_user_response = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "Unique id of the user in Kinde.",
    },
    given_name: {
      type: "string",
      description: "User's first name.",
    },
    family_name: {
      type: "string",
      description: "User's last name.",
    },
    email: {
      type: "string",
      description: "User's preferred email.",
    },
    is_suspended: {
      type: "boolean",
      description: "Whether the user is currently suspended or not.",
    },
    is_password_reset_requested: {
      type: "boolean",
      description: "Whether a password reset has been requested.",
    },
    picture: {
      type: "string",
      description: "User's profile picture URL.",
    },
  },
} as const;

export const $users = {
  type: "array",
  description: "Array of users.",
  items: {
    $ref: "#/components/schemas/user",
  },
} as const;

export const $users_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    users: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
            description: "Unique id of the user in Kinde.",
          },
          provided_id: {
            type: "string",
            description: "External id for user.",
          },
          email: {
            type: "string",
            description: "Default email address of the user in Kinde.",
          },
          username: {
            type: "string",
            description: "Primary username of the user in Kinde.",
          },
          last_name: {
            type: "string",
            description: "User's last name.",
          },
          first_name: {
            type: "string",
            description: "User's first name.",
          },
          is_suspended: {
            type: "boolean",
            description: "Whether the user is currently suspended or not.",
          },
          picture: {
            type: "string",
            description: "User's profile picture URL.",
          },
          total_sign_ins: {
            type: "integer",
            description: "Total number of user sign ins.",
            nullable: true,
          },
          failed_sign_ins: {
            type: "integer",
            description: "Number of consecutive failed user sign ins.",
            nullable: true,
          },
          last_signed_in: {
            type: "string",
            description: "Last sign in date in ISO 8601 format.",
            nullable: true,
          },
          created_on: {
            type: "string",
            description: "Date of user creation in ISO 8601 format.",
            nullable: true,
          },
          organizations: {
            type: "array",
            description: "Array of organizations a user belongs to.",
            items: {
              type: "string",
            },
          },
          identities: {
            type: "array",
            description: "Array of identities belonging to the user.",
            items: {
              type: "object",
              properties: {
                type: {
                  type: "string",
                },
                identity: {
                  type: "string",
                },
              },
            },
          },
        },
      },
    },
    next_token: {
      type: "string",
      description: "Pagination token.",
    },
  },
} as const;

export const $create_user_response = {
  type: "object",
  properties: {
    id: {
      description: "Unique id of the user in Kinde.",
      type: "string",
    },
    created: {
      description: "True if the user was successfully created.",
      type: "boolean",
    },
    identities: {
      type: "array",
      items: {
        $ref: "#/components/schemas/user_identity",
      },
    },
  },
} as const;

export const $create_organization_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    organization: {
      type: "object",
      properties: {
        code: {
          description: "The organization's code.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $user_identity = {
  type: "object",
  properties: {
    type: {
      type: "string",
      description: "The type of identity object created.",
    },
    result: {
      type: "object",
      description: "The result of the user creation operation.",
      properties: {
        created: {
          type: "boolean",
          description: "True if the user identity was successfully created.",
        },
      },
    },
  },
} as const;

export const $user_profile = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "Unique id of the user in Kinde.",
    },
    preferred_email: {
      type: "string",
      description: "Default email address of the user in Kinde.",
    },
    username: {
      type: "string",
      description: "Primary username of the user in Kinde.",
    },
    provided_id: {
      type: "string",
      description:
        "Value of the user's id in a third-party system when the user is imported into Kinde.",
      nullable: true,
    },
    last_name: {
      type: "string",
      description: "User's last name.",
    },
    first_name: {
      type: "string",
      description: "User's first name.",
    },
    picture: {
      type: "string",
      description: "URL that point's to the user's picture or avatar",
    },
  },
} as const;

export const $create_property_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    property: {
      type: "object",
      properties: {
        id: {
          description: "The property's ID.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $create_identity_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    identity: {
      type: "object",
      properties: {
        id: {
          description: "The identity's ID.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $get_identities_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    properties: {
      type: "array",
      items: {
        $ref: "#/components/schemas/identity",
      },
    },
    has_more: {
      description: "Whether more records exist.",
      type: "boolean",
    },
  },
} as const;

export const $get_properties_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    properties: {
      type: "array",
      items: {
        $ref: "#/components/schemas/property",
      },
    },
    has_more: {
      description: "Whether more records exist.",
      type: "boolean",
    },
  },
} as const;

export const $get_property_values_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    properties: {
      type: "array",
      items: {
        $ref: "#/components/schemas/property_value",
      },
    },
    next_token: {
      description: "Pagination token.",
      type: "string",
    },
  },
} as const;

export const $create_category_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    category: {
      type: "object",
      properties: {
        id: {
          description: "The category's ID.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $get_categories_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    categories: {
      type: "array",
      items: {
        $ref: "#/components/schemas/category",
      },
    },
    has_more: {
      description: "Whether more records exist.",
      type: "boolean",
    },
  },
} as const;

export const $get_event_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    event: {
      type: "object",
      properties: {
        type: {
          type: "string",
        },
        source: {
          type: "string",
        },
        event_id: {
          type: "string",
        },
        timestamp: {
          type: "string",
          description: "Timestamp in ISO 8601 format.",
        },
        data: {
          type: "object",
          description: "Event specific data object.",
        },
      },
    },
  },
} as const;

export const $get_event_types_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    event_types: {
      type: "array",
      items: {
        $ref: "#/components/schemas/event_type",
      },
    },
  },
} as const;

export const $get_webhooks_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    webhooks: {
      type: "array",
      items: {
        $ref: "#/components/schemas/webhook",
      },
    },
  },
} as const;

export const $webhook = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    endpoint: {
      type: "string",
    },
    description: {
      type: "string",
    },
    event_types: {
      type: "array",
      items: {
        type: "string",
      },
    },
    created_on: {
      type: "string",
      description: "Created on date in ISO 8601 format.",
    },
  },
} as const;

export const $create_webhook_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    webhook: {
      type: "object",
      properties: {
        id: {
          type: "string",
        },
        endpoint: {
          type: "string",
        },
      },
    },
  },
} as const;

export const $update_webhook_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    webhook: {
      type: "object",
      properties: {
        id: {
          type: "string",
        },
      },
    },
  },
} as const;

export const $create_connection_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    code: {
      type: "string",
    },
    connection: {
      type: "object",
      properties: {
        id: {
          description: "The connection's ID.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $get_connections_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    connections: {
      type: "array",
      items: {
        $ref: "#/components/schemas/connection",
      },
    },
    has_more: {
      description: "Whether more records exist.",
      type: "boolean",
    },
  },
} as const;

export const $delete_webhook_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
  },
} as const;

export const $event_type = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    code: {
      type: "string",
    },
    name: {
      type: "string",
    },
    origin: {
      type: "string",
    },
    schema: {
      type: "object",
    },
  },
} as const;

export const $token_introspect = {
  type: "object",
  properties: {
    active: {
      type: "boolean",
      description: "Indicates the status of the token.",
    },
    aud: {
      type: "array",
      description: "Array of intended token recipients.",
      items: {
        type: "string",
      },
    },
    client_id: {
      type: "string",
      description: "Identifier for the requesting client.",
    },
    exp: {
      type: "string",
      description: "Token expiration timestamp.",
    },
    iat: {
      type: "string",
      description: "Token issuance timestamp.",
    },
  },
} as const;

export const $token_error_response = {
  type: "object",
  properties: {
    error: {
      type: "string",
      description: "Error.",
    },
    error_description: {
      type: "string",
      description: "The error description.",
    },
  },
} as const;

export const $user_profile_v2 = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "Unique id of the user in Kinde (deprecated).",
    },
    sub: {
      type: "string",
      description: "Unique id of the user in Kinde.",
    },
    provided_id: {
      type: "string",
      description:
        "Value of the user's id in a third-party system when the user is imported into Kinde.",
      nullable: true,
    },
    name: {
      type: "string",
      description: "User's first and last name separated by a space.",
    },
    given_name: {
      type: "string",
      description: "User's first name.",
    },
    family_name: {
      type: "string",
      description: "User's last name.",
    },
    updated_at: {
      type: "integer",
      description: "Date the user was last updated at (In Unix time).",
    },
    email: {
      type: "string",
      description: "User's email address if available.",
    },
    picture: {
      type: "string",
      description: "URL that point's to the user's picture or avatar",
    },
  },
} as const;

export const $organization = {
  type: "object",
  properties: {
    code: {
      type: "string",
    },
    name: {
      type: "string",
    },
    is_default: {
      type: "boolean",
    },
    external_id: {
      type: "string",
    },
    logo: {
      type: "string",
    },
    link_color: {
      type: "string",
    },
    button_color: {
      type: "string",
    },
    background_color: {
      type: "string",
    },
    button_text_color: {
      type: "string",
    },
    is_allow_registrations: {
      type: "boolean",
    },
  },
} as const;

export const $organization_user = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    email: {
      type: "string",
    },
    full_name: {
      type: "string",
    },
    last_name: {
      type: "string",
    },
    first_name: {
      type: "string",
    },
    picture: {
      type: "string",
    },
    roles: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $category = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
  },
} as const;

export const $connection = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    display_name: {
      type: "string",
    },
    strategy: {
      type: "string",
    },
  },
} as const;

export const $identity = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    type: {
      type: "string",
    },
    is_confirmed: {
      type: "boolean",
    },
    created_on: {
      type: "string",
      description: "Date of user creation in ISO 8601 format.",
    },
    last_login_on: {
      type: "string",
      description: "Date of user creation in ISO 8601 format.",
    },
    total_logins: {
      type: "integer",
    },
    name: {
      type: "string",
    },
  },
} as const;

export const $property = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    key: {
      type: "string",
    },
    name: {
      type: "string",
    },
    is_private: {
      type: "boolean",
    },
    description: {
      type: "string",
    },
    is_kinde_property: {
      type: "boolean",
    },
  },
} as const;

export const $property_value = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    key: {
      type: "string",
    },
    value: {
      type: "string",
    },
  },
} as const;

export const $role = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    key: {
      type: "string",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
  },
} as const;

export const $subscribers_subscriber = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    email: {
      type: "string",
    },
    full_name: {
      type: "string",
    },
    first_name: {
      type: "string",
    },
    last_name: {
      type: "string",
    },
  },
} as const;

export const $subscriber = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    preferred_email: {
      type: "string",
    },
    first_name: {
      type: "string",
    },
    last_name: {
      type: "string",
    },
  },
} as const;

export const $organization_user_role = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    key: {
      type: "string",
    },
    name: {
      type: "string",
    },
  },
} as const;

export const $organization_user_role_permissions = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    role: {
      type: "string",
    },
    permissions: {
      type: "object",
      properties: {
        key: {
          type: "string",
        },
      },
    },
  },
} as const;

export const $organization_user_permission = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    key: {
      type: "string",
    },
    name: {
      type: "string",
    },
    description: {
      type: "string",
    },
    roles: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
          },
          key: {
            type: "string",
          },
        },
      },
    },
  },
} as const;

export const $organization_users = {
  type: "array",
  items: {
    $ref: "#/components/schemas/organization_user",
  },
} as const;

export const $get_subscriber_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    subscribers: {
      type: "array",
      items: {
        $ref: "#/components/schemas/subscriber",
      },
    },
  },
} as const;

export const $get_subscribers_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    subscribers: {
      type: "array",
      items: {
        $ref: "#/components/schemas/subscribers_subscriber",
      },
    },
    next_token: {
      description: "Pagination token.",
      type: "string",
    },
  },
} as const;

export const $get_roles_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    roles: {
      type: "array",
      items: {
        $ref: "#/components/schemas/roles",
      },
    },
    next_token: {
      description: "Pagination token.",
      type: "string",
    },
  },
} as const;

export const $get_organizations_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    organizations: {
      type: "array",
      items: {
        $ref: "#/components/schemas/organization",
      },
    },
    next_token: {
      description: "Pagination token.",
      type: "string",
    },
  },
} as const;

export const $get_organization_users_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    organization_users: {
      type: "array",
      items: {
        $ref: "#/components/schemas/organization_user",
      },
    },
    next_token: {
      type: "string",
      description: "Pagination token.",
    },
  },
} as const;

export const $get_organizations_user_roles_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    roles: {
      type: "array",
      items: {
        $ref: "#/components/schemas/organization_user_role",
      },
    },
    next_token: {
      type: "string",
      description: "Pagination token.",
    },
  },
} as const;

export const $get_organizations_user_permissions_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    permissions: {
      type: "array",
      items: {
        $ref: "#/components/schemas/organization_user_permission",
      },
    },
  },
} as const;

export const $get_organization_feature_flags_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    feature_flags: {
      type: "object",
      description: "The environment's feature flag settings.",
      additionalProperties: {
        type: "object",
        properties: {
          type: {
            type: "string",
            enum: ["str", "int", "bool"],
          },
          value: {
            type: "string",
          },
        },
      },
    },
  },
} as const;

export const $get_environment_feature_flags_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    feature_flags: {
      type: "object",
      description: "The environment's feature flag settings.",
      additionalProperties: {
        type: "object",
        properties: {
          type: {
            type: "string",
            enum: ["str", "int", "bool"],
          },
          value: {
            type: "string",
          },
        },
      },
    },
    next_token: {
      type: "string",
      description: "Pagination token.",
    },
  },
} as const;

export const $add_organization_users_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    users_added: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $update_role_permissions_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
    },
    message: {
      type: "string",
    },
    permissions_added: {
      type: "array",
      items: {
        type: "string",
      },
    },
    permissions_removed: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $update_organization_users_response = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
    users_added: {
      type: "array",
      items: {
        type: "string",
      },
    },
    users_updated: {
      type: "array",
      items: {
        type: "string",
      },
    },
    users_removed: {
      type: "array",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $connected_apps_auth_url = {
  type: "object",
  properties: {
    url: {
      type: "string",
      description:
        "A URL that is used to authenticate an end-user against a connected app.",
    },
    session_id: {
      type: "string",
      description: "A unique identifier for the login session.",
    },
  },
} as const;

export const $create_subscriber_success_response = {
  type: "object",
  properties: {
    subscriber: {
      type: "object",
      properties: {
        subscriber_id: {
          type: "string",
          description: "A unique identifier for the subscriber.",
        },
      },
    },
  },
} as const;

export const $connected_apps_access_token = {
  type: "object",
  properties: {
    access_token: {
      type: "string",
      description: "The access token to access a third-party provider.",
    },
    access_token_expiry: {
      type: "string",
      description: "The date and time that the access token expires.",
    },
  },
} as const;

export const $api_result = {
  type: "object",
  properties: {
    result: {
      type: "string",
      description: "The result of the api operation.",
    },
  },
} as const;

export const $create_application_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    application: {
      type: "object",
      properties: {
        id: {
          description: "The application's identifier.",
          type: "string",
        },
        client_id: {
          description: "The application's client id.",
          type: "string",
        },
        client_secret: {
          description: "The application's client secret.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $get_application_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    application: {
      type: "object",
      properties: {
        id: {
          description: "The application's identifier.",
          type: "string",
        },
        name: {
          description: "The application's name.",
          type: "string",
        },
        type: {
          description: "The application's type.",
          type: "string",
        },
        client_id: {
          description: "The application's client id.",
          type: "string",
        },
        client_secret: {
          description: "The application's client secret.",
          type: "string",
        },
        login_uri: {
          description: "The default login route for resolving session issues.",
          type: "string",
        },
        homepage_uri: {
          description: "The homepage link to your application.",
          type: "string",
        },
      },
    },
  },
} as const;

export const $applications = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    name: {
      type: "string",
    },
    type: {
      type: "string",
    },
  },
} as const;

export const $get_applications_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    applications: {
      type: "array",
      items: {
        $ref: "#/components/schemas/applications",
      },
    },
    next_token: {
      description: "Pagination token.",
      type: "string",
    },
  },
} as const;

export const $redirect_callback_urls = {
  type: "object",
  properties: {
    redirect_urls: {
      type: "array",
      description: "An application's redirect URLs.",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $get_redirect_callback_urls_response = {
  type: "object",
  properties: {
    redirect_urls: {
      description: "An application's redirect callback URLs.",
      type: "array",
      items: {
        $ref: "#/components/schemas/redirect_callback_urls",
      },
    },
  },
} as const;

export const $logout_redirect_urls = {
  type: "object",
  properties: {
    redirect_urls: {
      type: "array",
      description: "An application's logout URLs.",
      items: {
        type: "string",
      },
    },
  },
} as const;

export const $get_permissions_response = {
  type: "object",
  properties: {
    code: {
      type: "string",
      description: "Response code.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    permissions: {
      type: "array",
      items: {
        $ref: "#/components/schemas/permissions",
      },
    },
    next_token: {
      type: "string",
      description: "Pagination token.",
    },
  },
} as const;

export const $permissions = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "The permission's id.",
    },
    key: {
      type: "string",
      description: "The permission identifier to use in code.",
    },
    name: {
      type: "string",
      description: "The permission's name.",
    },
    description: {
      type: "string",
      description: "The permission's description.",
    },
  },
} as const;

export const $roles = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "The role's id.",
    },
    key: {
      type: "string",
      description: "The role identifier to use in code.",
    },
    name: {
      type: "string",
      description: "The role's name.",
    },
    description: {
      type: "string",
      description: "The role's description.",
    },
  },
} as const;

export const $roles_permission_response = {
  type: "array",
  items: {
    type: "object",
    properties: {
      id: {
        type: "string",
      },
      key: {
        type: "string",
      },
      name: {
        type: "string",
      },
      description: {
        type: "string",
      },
    },
  },
} as const;

export const $apis = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "Unique id of the API.",
    },
    name: {
      type: "string",
      description: "The API's name.",
    },
    audience: {
      type: "string",
      description: "The logical identifier for the API.",
    },
    is_management_api: {
      type: "boolean",
      description: "Whether it is the management API or not.",
    },
  },
} as const;

export const $api = {
  type: "object",
  properties: {
    id: {
      type: "string",
      description: "The API's unique identifier.",
    },
    code: {
      type: "string",
      description: "Response code.",
    },
    name: {
      type: "string",
      description: "The API's name.",
    },
    message: {
      type: "string",
      description: "Response message.",
    },
    audience: {
      type: "string",
      description: "The API's audience.",
    },
    applications: {
      type: "array",
      items: {
        type: "object",
        properties: {
          id: {
            type: "string",
          },
          name: {
            type: "string",
          },
          type: {
            type: "string",
          },
          is_active: {
            type: "boolean",
          },
        },
      },
    },
  },
} as const;
